epicsEnvSet("MOTOR","/opt/epics/synApps_6_3/support/motor-R7-3-1")
epicsEnvSet("OPTICS","/opt/epics/synApps_6_3/support/optics-R2-14")
epicsEnvSet("SCALER","/opt/epics/synApps_6_3/support/scaler-4-1")
epicsEnvSet("SNCSEQ","/opt/epics/synApps_6_3/support/sequencer-mirror-R2-2-9")
epicsEnvSet("SOFTGLUE","/opt/epics/synApps_6_3/support/softGlue-R2-8-4")
epicsEnvSet("SOFTGLUEZYNQ","/opt/epics/synApps_6_3/support/softGlueZynq-R2-0-5")
epicsEnvSet("SSCAN","/opt/epics/synApps_6_3/support/sscan-R2-11-6")
epicsEnvSet("STD","/opt/epics/synApps_6_3/support/std-R3-6-4")
epicsEnvSet("STREAM","/opt/epics/synApps_6_3/support/StreamDevice-2-8-24")
epicsEnvSet("VAC","/opt/epics/synApps_6_3/support/vac-R1-9-2")
epicsEnvSet("VME","/opt/epics/synApps_6_3/support/vme-R2-9-5")
epicsEnvSet("XXX","/opt/epics/synApps_6_3/support/xxx-R6-3")
epicsEnvSet("YOKOGAWA_DAS","/opt/epics/synApps_6_3/support/Yokogawa_DAS-R2-0-2")
epicsEnvSet("ALLENBRADLEY","/opt/epics/synApps_6_3/support/allenBradley-2-3")
epicsEnvSet("ULDAQ","/opt/epics/synApps_6_3/support/measComp-R4-2/libuldaq-1.2.1")
# Shell prompt
epicsEnvSet("IOCSH_PS1", "$(IOC)> ")
# prefix used for all PVs in this IOC
epicsEnvSet("PREFIX", "18id:")
#For devIocStats
epicsEnvSet("ENGINEER", "Guerra")
epicsEnvSet("LOCATION", "18-ID")
epicsEnvSet("GROUP", "BC")
# search path for database files
epicsEnvSet("EPICS_DB_INCLUDE_PATH", "$(DEVIOCSTATS)/db")
# set the protocol path for streamDevice
epicsEnvSet("STREAM_PROTOCOL_PATH", ".")
# Specify largest array CA will transport
# Note for N doubles, need N*8 bytes+some overhead
epicsEnvSet("EPICS_CA_MAX_ARRAY_BYTES", 64010)
### save_restore setup, change SAVE_PATH if you are having autosave manage its own NFS mount
#iocshLoad("$(AUTOSAVE)/iocsh/autosave_settings.iocsh", "PREFIX=$(PREFIX), SAVE_PATH=$(TOP)/iocBoot/$(IOC), NUM_SEQ=12, SEQ_PERIOD=43200")
#iocshLoad("$(TOP)/iocBoot/$(IOC)/iocsh/autosaveBuild.iocsh",     "PREFIX=$(PREFIX), BUILD_PATH=autosave")
#iocshLoad("$(AUTOSAVE)/iocsh/save_restore.iocsh",      "PREFIX=$(PREFIX), POSITIONS_FILE=auto_positions, SETTINGS_FILE=auto_settings")
###
# specify directories in which to search for included request files
# Note that the vxWorks variables (e.g., 'startup') are from cdCommands
#set_requestfile_path("$(AREA_DETECTOR)", "ADApp/Db")
#set_requestfile_path("$(ADCORE)", "ADApp/Db")
#set_requestfile_path("$(AUTOSAVE)/db")
#set_requestfile_path("$(BUSY)/db")
#set_requestfile_path("$(CALC)/db")
#set_requestfile_path("$(CAMAC)", "camacApp/Db")
#set_requestfile_path("$(CAPUTRECORDER)/db")
#set_requestfile_path("$(DAC128V)", "dac128VApp/Db")
#set_requestfile_path("$(DELAYGEN)/db")
#set_requestfile_path("$(DXP)", "dxpApp/Db")
#set_requestfile_path("$(DXPSITORO)", "dxpApp/Db")
#set_requestfile_path("$(IP)/db")
#set_requestfile_path("$(IP330)", "ip330App/Db")
#set_requestfile_path("$(IPUNIDIG)", "ipUnidigApp/Db")
#set_requestfile_path("$(LOVE)/db")
#set_requestfile_path("$(LUA)/db")
#set_requestfile_path("$(MCA)", "mcaApp/Db")
#set_requestfile_path("$(MEASCOMP)", "measCompApp/Db")
#set_requestfile_path("$(MODBUS)", "modbusApp/Db")
#set_requestfile_path("$(MOTOR)/db")
#set_requestfile_path("$(OPTICS)/db")
#set_requestfile_path("$(QUADEM)", "quadEMApp/Db")
#set_requestfile_path("$(SSCAN)/db")
#set_requestfile_path("$(SOFTGLUE)/db")
#set_requestfile_path("$(SOFTGLUEZYNQ)/db")
#set_requestfile_path("$(STD)/db")
#set_requestfile_path("$(VAC)/db")
#set_requestfile_path("$(VME)/db")
#set_requestfile_path("$(YOKOGAWA_DAS)/db")
set_requestfile_path("$(TOP)/db")
# Debug-output level
#save_restoreSet_Debug(0)
### Scan-support software
#iocshLoad("$(SSCAN)/iocsh/sscan.iocsh", "PREFIX=$(PREFIX), MAX_PTS=1000, REQ_FILE=saveData.req")
#iocshLoad("$(AUTOSAVE)/iocsh/configMenu.iocsh", "PREFIX=$(PREFIX),CONFIG=scan1")
### Stuff for user programming ###
#iocshLoad("$(CALC)/iocsh/userCalc.iocsh", "PREFIX=$(PREFIX), ARRAY_SIZE=8000")
# Load 10 more of all the user calcs, N=1 creates usercalcs 10-19
#iocshLoad("$(CALC)/iocsh/userCalc_extra.iocsh", "PREFIX=$(PREFIX), N=1, ARRAY_SIZE=8000")
# Load 20 userScripts
#dbLoadRecords("$(LUA)/luaApp/Db/luascripts10.db", "P=$(PREFIX), R=set1:")
#dbLoadRecords("$(LUA)/luaApp/Db/luascripts10.db", "P=$(PREFIX), R=set2:")
# string sequence (sseq) records
#iocshLoad("$(CALC)/iocsh/sseq.iocsh", "PREFIX=$(PREFIX), INSTANCE=ES:")
# busy record
#dbLoadRecords("$(BUSY)/busyApp/Db/busyRecord.db", "P=$(PREFIX),R=mybusy1")
#dbLoadRecords("$(BUSY)/busyApp/Db/busyRecord.db", "P=$(PREFIX),R=mybusy2")
### Load database record for alive heartbeating support.
# RHOST specifies the IP address that receives the heartbeats.
#dbLoadRecords("$(ALIVE)/aliveApp/Db/alive.db", "P=$(PREFIX),RHOST=164.54.100.11")
#dbLoadRecords("$(ALIVE)/aliveApp/Db/aliveMSGCalc.db", "P=$(PREFIX)")
# Miscellaneous PV's, such as burtResult
#dbLoadRecords("$(STD)/stdApp/Db/misc.db","P=$(PREFIX)")
## Initialize BLEPS EtherIP driver
drvEtherIP_init()
EIP_verbosity(4)
# Use 480 or smaller, like 450
EIP_buffer_limit(480)
## Configure BLEPS host
# 000.00.000.00   ID000     PLC NETWO 00:00:00:00:00:00
# vxWorks Only
# hostAdd("000","000.00.000.00")
## Define BLEPS PLC
drvEtherIP_define_PLC("bleps","164.54.204.15",0)
## Load BLEPS database(s)
dbLoadTemplate("substitutions/bleps.substitutions")
# Debug-output level
save_restoreSet_Debug(0)
# Set PV prefix
save_restoreSet_status_prefix("18ID:")
# Ok to save/restore save sets with missing values (no CA connection to PV)?
save_restoreSet_IncompleteSetsOk(1)
# Save dated backup files?
save_restoreSet_DatedBackupFiles(1)
# Number of sequenced backup files to write
save_restoreSet_NumSeqFiles(3)
# Time interval between sequenced backups
save_restoreSet_SeqPeriodInSeconds(300)
# Specify directories to search for save files
set_savefile_path(".","autosave")
###
# specify what save files should be restored.  Note these files must be
# in the directory specified in set_savefile_path(), or, if that function
# has not been called, from the directory current when iocInit is invoked
#set_pass0_restoreFile("auto_positions.sav")
# Note doAfterIocInit() supplied by std module.
#doAfterIocInit("create_monitor_set('auto_positions.req',5,'P=kag:')")
set_pass0_restoreFile("auto_settings.sav")
set_pass1_restoreFile("auto_settings.sav")
# Specify directories to search for request files
set_requestfile_path(".",  "")
set_requestfile_path(".",  "autosave")
set_requestfile_path($(AUTOSAVE),"asApp/Db")
# set_requestfile_path($(TOP), "LabJackApp/Db")
# Load database
dbLoadRecords("$(AUTOSAVE)/asApp/Db/save_restoreStatus.db", "P=18ID:")
###############################################################################
iocInit
###############################################################################
# write all the PV names to a local file
dbl > dbl-all.txt
# Diagnostic: CA links in all records
#dbcar(0,1)
###
### Set digital outputs low, otherwise they float
###
# Must match the substitions file PV names
#dbpf 18ID:LJT4:1:DO0 0
#dbpf 18ID:LJT4:1:DO1 0
#dbpf 18ID:LJT4:1:DO2 0
#dbpf 18ID:LJT4:1:DO3 0
#dbpf 18ID:LJT4:1:DO4 0
#dbpf 18ID:LJT4:1:DO5 0
#dbpf 18ID:LJT4:1:DO6 0
#dbpf 18ID:LJT4:1:DO7 0
#dbpf 18ID:LJT4:1:DO8 0
#dbpf 18ID:LJT4:1:DO9 0
#dbpf 18ID:LJT4:1:DO10 0
#dbpf 18ID:LJT4:1:DO11 0
#dbpf 18ID:LJT4:1:DO12 0
#dbpf 18ID:LJT4:1:DO13 0
#dbpf 18ID:LJT4:1:DO14 0
#dbpf 18ID:LJT4:1:DO15 0
#dbpf 18ID:LJT4:1:AO0 0
#dbpf 18ID:LJT4:1:AO1 0
#dbpf 18ID:LJT4:2:DO0 1
#dbpf 18ID:LJT4:2:DO1 1
#dbpf 18ID:LJT4:2:DO2 1
#dbpf 18ID:LJT4:2:DO3 1
#dbpf 18ID:LJT4:2:DO4 1
#dbpf 18ID:LJT4:2:DO5 1
#dbpf 18ID:LJT4:2:DO6 1
#dbpf 18ID:LJT4:2:DO7 1
#dbpf 18ID:LJT4:2:DO8 0
#dbpf 18ID:LJT4:2:DO9 0
#dbpf 18ID:LJT4:2:DO10 0
#dbpf 18ID:LJT4:2:DO11 0
#dbpf 18ID:LJT4:2:DO12 0
#dbpf 18ID:LJT4:2:DO13 0
#dbpf 18ID:LJT4:2:DO14 0
#dbpf 18ID:LJT4:2:DO15 0
#dbpf 18ID:LJT4:2:AO0 0
#dbpf 18ID:LJT4:2:AO1 0
#dbpf 18ID:LJT4:3:AO0 0
#dbpf 18ID:LJT4:3:AO1 0
# print the time our boot was finished
date
epicsEnvSet("IOC","ioc18id")
epicsEnvSet("TOP","/opt/epics/iocs/epics_iocs/soft_iocs/18id_con/18id")
epicsEnvSet("SUPPORT","/opt/epics/synApps_6_3/support")
epicsEnvSet("EPICS_BASE","/opt/epics/base")
epicsEnvSet("ALIVE","/opt/epics/synApps_6_3/support/alive-R1-4-1")
epicsEnvSet("ASYN","/opt/epics/synApps_6_3/support/asyn-R4-44-2")
epicsEnvSet("AUTOSAVE","/opt/epics/synApps_6_3/support/autosave-R5-11")
epicsEnvSet("BUSY","/opt/epics/synApps_6_3/support/busy-R1-7-4")
epicsEnvSet("CALC","/opt/epics/synApps_6_3/support/calc-R3-7-5")
epicsEnvSet("CAMAC","/opt/epics/synApps_6_3/support/camac-R2-7-5")
epicsEnvSet("CAPUTRECORDER","/opt/epics/synApps_6_3/support/caputRecorder-R1-7-6")
epicsEnvSet("DAC128V","/opt/epics/synApps_6_3/support/dac128V-R2-10-1")
epicsEnvSet("DELAYGEN","/opt/epics/synApps_6_3/support/delaygen-R1-2-4")
epicsEnvSet("DEVIOCSTATS","/opt/epics/synApps_6_3/support/iocStats-3-1-16")
epicsEnvSet("ETHERIP","/opt/epics/synApps_6_3/support/ether_ip-ether_ip-3-3")
epicsEnvSet("GALIL","/opt/epics/synApps_6_3/support/Galil-4-0-00")
epicsEnvSet("IP","/opt/epics/synApps_6_3/support/ip-R2-22")
epicsEnvSet("IP330","/opt/epics/synApps_6_3/support/ip330-R2-10")
epicsEnvSet("IPAC","/opt/epics/synApps_6_3/support/ipac-2-16")
epicsEnvSet("IPUNIDIG","/opt/epics/synApps_6_3/support/ipUnidig-R2-12")
epicsEnvSet("LABJACK","/opt/epics/synApps_6_3/support/LabJack-master")
epicsEnvSet("LOVE","/opt/epics/synApps_6_3/support/love-R3-2-9")
epicsEnvSet("LUA","/opt/epics/synApps_6_3/support/lua-R3-1")
epicsEnvSet("MCA","/opt/epics/synApps_6_3/support/mca-R7-10")
epicsEnvSet("MEASCOMP","/opt/epics/synApps_6_3/support/measComp-R4-2")
epicsEnvSet("MODBUS","/opt/epics/synApps_6_3/support/modbus-R3-3")
epicsEnvSet("MOTOR","/opt/epics/synApps_6_3/support/motor-R7-3-1")
epicsEnvSet("OPTICS","/opt/epics/synApps_6_3/support/optics-R2-14")
epicsEnvSet("SCALER","/opt/epics/synApps_6_3/support/scaler-4-1")
epicsEnvSet("SNCSEQ","/opt/epics/synApps_6_3/support/sequencer-mirror-R2-2-9")
epicsEnvSet("SOFTGLUE","/opt/epics/synApps_6_3/support/softGlue-R2-8-4")
epicsEnvSet("SOFTGLUEZYNQ","/opt/epics/synApps_6_3/support/softGlueZynq-R2-0-5")
epicsEnvSet("SSCAN","/opt/epics/synApps_6_3/support/sscan-R2-11-6")
epicsEnvSet("STD","/opt/epics/synApps_6_3/support/std-R3-6-4")
epicsEnvSet("STREAM","/opt/epics/synApps_6_3/support/StreamDevice-2-8-24")
epicsEnvSet("VAC","/opt/epics/synApps_6_3/support/vac-R1-9-2")
epicsEnvSet("VME","/opt/epics/synApps_6_3/support/vme-R2-9-5")
epicsEnvSet("XXX","/opt/epics/synApps_6_3/support/xxx-R6-3")
epicsEnvSet("YOKOGAWA_DAS","/opt/epics/synApps_6_3/support/Yokogawa_DAS-R2-0-2")
epicsEnvSet("ALLENBRADLEY","/opt/epics/synApps_6_3/support/allenBradley-2-3")
epicsEnvSet("ULDAQ","/opt/epics/synApps_6_3/support/measComp-R4-2/libuldaq-1.2.1")
# Shell prompt
epicsEnvSet("IOCSH_PS1", "$(IOC)> ")
# prefix used for all PVs in this IOC
epicsEnvSet("PREFIX", "18id:")
#For devIocStats
epicsEnvSet("ENGINEER", "Guerra")
epicsEnvSet("LOCATION", "18-ID")
epicsEnvSet("GROUP", "BC")
# search path for database files
epicsEnvSet("EPICS_DB_INCLUDE_PATH", "$(DEVIOCSTATS)/db")
# set the protocol path for streamDevice
epicsEnvSet("STREAM_PROTOCOL_PATH", ".")
# Specify largest array CA will transport
# Note for N doubles, need N*8 bytes+some overhead
epicsEnvSet("EPICS_CA_MAX_ARRAY_BYTES", 64010)
### save_restore setup, change SAVE_PATH if you are having autosave manage its own NFS mount
#iocshLoad("$(AUTOSAVE)/iocsh/autosave_settings.iocsh", "PREFIX=$(PREFIX), SAVE_PATH=$(TOP)/iocBoot/$(IOC), NUM_SEQ=12, SEQ_PERIOD=43200")
#iocshLoad("$(TOP)/iocBoot/$(IOC)/iocsh/autosaveBuild.iocsh",     "PREFIX=$(PREFIX), BUILD_PATH=autosave")
#iocshLoad("$(AUTOSAVE)/iocsh/save_restore.iocsh",      "PREFIX=$(PREFIX), POSITIONS_FILE=auto_positions, SETTINGS_FILE=auto_settings")
###
# specify directories in which to search for included request files
# Note that the vxWorks variables (e.g., 'startup') are from cdCommands
#set_requestfile_path("$(AREA_DETECTOR)", "ADApp/Db")
#set_requestfile_path("$(ADCORE)", "ADApp/Db")
#set_requestfile_path("$(AUTOSAVE)/db")
#set_requestfile_path("$(BUSY)/db")
#set_requestfile_path("$(CALC)/db")
#set_requestfile_path("$(CAMAC)", "camacApp/Db")
#set_requestfile_path("$(CAPUTRECORDER)/db")
#set_requestfile_path("$(DAC128V)", "dac128VApp/Db")
#set_requestfile_path("$(DELAYGEN)/db")
#set_requestfile_path("$(DXP)", "dxpApp/Db")
#set_requestfile_path("$(DXPSITORO)", "dxpApp/Db")
#set_requestfile_path("$(IP)/db")
#set_requestfile_path("$(IP330)", "ip330App/Db")
#set_requestfile_path("$(IPUNIDIG)", "ipUnidigApp/Db")
#set_requestfile_path("$(LOVE)/db")
#set_requestfile_path("$(LUA)/db")
#set_requestfile_path("$(MCA)", "mcaApp/Db")
#set_requestfile_path("$(MEASCOMP)", "measCompApp/Db")
#set_requestfile_path("$(MODBUS)", "modbusApp/Db")
#set_requestfile_path("$(MOTOR)/db")
#set_requestfile_path("$(OPTICS)/db")
#set_requestfile_path("$(QUADEM)", "quadEMApp/Db")
#set_requestfile_path("$(SSCAN)/db")
#set_requestfile_path("$(SOFTGLUE)/db")
#set_requestfile_path("$(SOFTGLUEZYNQ)/db")
#set_requestfile_path("$(STD)/db")
#set_requestfile_path("$(VAC)/db")
#set_requestfile_path("$(VME)/db")
#set_requestfile_path("$(YOKOGAWA_DAS)/db")
set_requestfile_path("$(TOP)/db")
# Debug-output level
#save_restoreSet_Debug(0)
### Scan-support software
#iocshLoad("$(SSCAN)/iocsh/sscan.iocsh", "PREFIX=$(PREFIX), MAX_PTS=1000, REQ_FILE=saveData.req")
#iocshLoad("$(AUTOSAVE)/iocsh/configMenu.iocsh", "PREFIX=$(PREFIX),CONFIG=scan1")
### Stuff for user programming ###
#iocshLoad("$(CALC)/iocsh/userCalc.iocsh", "PREFIX=$(PREFIX), ARRAY_SIZE=8000")
# Load 10 more of all the user calcs, N=1 creates usercalcs 10-19
#iocshLoad("$(CALC)/iocsh/userCalc_extra.iocsh", "PREFIX=$(PREFIX), N=1, ARRAY_SIZE=8000")
# Load 20 userScripts
#dbLoadRecords("$(LUA)/luaApp/Db/luascripts10.db", "P=$(PREFIX), R=set1:")
#dbLoadRecords("$(LUA)/luaApp/Db/luascripts10.db", "P=$(PREFIX), R=set2:")
# string sequence (sseq) records
#iocshLoad("$(CALC)/iocsh/sseq.iocsh", "PREFIX=$(PREFIX), INSTANCE=ES:")
# busy record
#dbLoadRecords("$(BUSY)/busyApp/Db/busyRecord.db", "P=$(PREFIX),R=mybusy1")
#dbLoadRecords("$(BUSY)/busyApp/Db/busyRecord.db", "P=$(PREFIX),R=mybusy2")
### Load database record for alive heartbeating support.
# RHOST specifies the IP address that receives the heartbeats.
#dbLoadRecords("$(ALIVE)/aliveApp/Db/alive.db", "P=$(PREFIX),RHOST=164.54.100.11")
#dbLoadRecords("$(ALIVE)/aliveApp/Db/aliveMSGCalc.db", "P=$(PREFIX)")
# Miscellaneous PV's, such as burtResult
#dbLoadRecords("$(STD)/stdApp/Db/misc.db","P=$(PREFIX)")
## Initialize BLEPS EtherIP driver
drvEtherIP_init()
EIP_verbosity(4)
# Use 480 or smaller, like 450
EIP_buffer_limit(480)
## Configure BLEPS host
# 000.00.000.00   ID000     PLC NETWO 00:00:00:00:00:00
# vxWorks Only
# hostAdd("000","000.00.000.00")
## Define BLEPS PLC
drvEtherIP_define_PLC("bleps","164.54.204.15",0)
## Load BLEPS database(s)
dbLoadTemplate("substitutions/bleps.substitutions")
# Debug-output level
save_restoreSet_Debug(0)
# Set PV prefix
save_restoreSet_status_prefix("18ID:")
# Ok to save/restore save sets with missing values (no CA connection to PV)?
save_restoreSet_IncompleteSetsOk(1)
# Save dated backup files?
save_restoreSet_DatedBackupFiles(1)
# Number of sequenced backup files to write
save_restoreSet_NumSeqFiles(3)
# Time interval between sequenced backups
save_restoreSet_SeqPeriodInSeconds(300)
# Specify directories to search for save files
set_savefile_path(".","autosave")
###
# specify what save files should be restored.  Note these files must be
# in the directory specified in set_savefile_path(), or, if that function
# has not been called, from the directory current when iocInit is invoked
#set_pass0_restoreFile("auto_positions.sav")
# Note doAfterIocInit() supplied by std module.
#doAfterIocInit("create_monitor_set('auto_positions.req',5,'P=kag:')")
set_pass0_restoreFile("auto_settings.sav")
set_pass1_restoreFile("auto_settings.sav")
# Specify directories to search for request files
set_requestfile_path(".",  "")
set_requestfile_path(".",  "autosave")
set_requestfile_path($(AUTOSAVE),"asApp/Db")
# set_requestfile_path($(TOP), "LabJackApp/Db")
# Load database
dbLoadRecords("$(AUTOSAVE)/asApp/Db/save_restoreStatus.db", "P=18ID:")
###############################################################################
iocInit
###############################################################################
# write all the PV names to a local file
dbl > dbl-all.txt
# Diagnostic: CA links in all records
#dbcar(0,1)
###
### Set digital outputs low, otherwise they float
###
# Must match the substitions file PV names
#dbpf 18ID:LJT4:1:DO0 0
#dbpf 18ID:LJT4:1:DO1 0
#dbpf 18ID:LJT4:1:DO2 0
#dbpf 18ID:LJT4:1:DO3 0
#dbpf 18ID:LJT4:1:DO4 0
#dbpf 18ID:LJT4:1:DO5 0
#dbpf 18ID:LJT4:1:DO6 0
#dbpf 18ID:LJT4:1:DO7 0
#dbpf 18ID:LJT4:1:DO8 0
#dbpf 18ID:LJT4:1:DO9 0
#dbpf 18ID:LJT4:1:DO10 0
#dbpf 18ID:LJT4:1:DO11 0
#dbpf 18ID:LJT4:1:DO12 0
#dbpf 18ID:LJT4:1:DO13 0
#dbpf 18ID:LJT4:1:DO14 0
#dbpf 18ID:LJT4:1:DO15 0
#dbpf 18ID:LJT4:1:AO0 0
#dbpf 18ID:LJT4:1:AO1 0
#dbpf 18ID:LJT4:2:DO0 1
#dbpf 18ID:LJT4:2:DO1 1
#dbpf 18ID:LJT4:2:DO2 1
#dbpf 18ID:LJT4:2:DO3 1
#dbpf 18ID:LJT4:2:DO4 1
#dbpf 18ID:LJT4:2:DO5 1
#dbpf 18ID:LJT4:2:DO6 1
#dbpf 18ID:LJT4:2:DO7 1
#dbpf 18ID:LJT4:2:DO8 0
#dbpf 18ID:LJT4:2:DO9 0
#dbpf 18ID:LJT4:2:DO10 0
#dbpf 18ID:LJT4:2:DO11 0
#dbpf 18ID:LJT4:2:DO12 0
#dbpf 18ID:LJT4:2:DO13 0
#dbpf 18ID:LJT4:2:DO14 0
#dbpf 18ID:LJT4:2:DO15 0
#dbpf 18ID:LJT4:2:AO0 0
#dbpf 18ID:LJT4:2:AO1 0
#dbpf 18ID:LJT4:3:AO0 0
#dbpf 18ID:LJT4:3:AO1 0
# print the time our boot was finished
date
epicsEnvSet("IOC","ioc18id")
epicsEnvSet("TOP","/opt/epics/iocs/epics_iocs/soft_iocs/18id_con/18id")
epicsEnvSet("SUPPORT","/opt/epics/synApps_6_3/support")
epicsEnvSet("EPICS_BASE","/opt/epics/base")
epicsEnvSet("ALIVE","/opt/epics/synApps_6_3/support/alive-R1-4-1")
epicsEnvSet("ASYN","/opt/epics/synApps_6_3/support/asyn-R4-44-2")
epicsEnvSet("AUTOSAVE","/opt/epics/synApps_6_3/support/autosave-R5-11")
epicsEnvSet("BUSY","/opt/epics/synApps_6_3/support/busy-R1-7-4")
epicsEnvSet("CALC","/opt/epics/synApps_6_3/support/calc-R3-7-5")
epicsEnvSet("CAMAC","/opt/epics/synApps_6_3/support/camac-R2-7-5")
epicsEnvSet("CAPUTRECORDER","/opt/epics/synApps_6_3/support/caputRecorder-R1-7-6")
epicsEnvSet("DAC128V","/opt/epics/synApps_6_3/support/dac128V-R2-10-1")
epicsEnvSet("DELAYGEN","/opt/epics/synApps_6_3/support/delaygen-R1-2-4")
epicsEnvSet("DEVIOCSTATS","/opt/epics/synApps_6_3/support/iocStats-3-1-16")
epicsEnvSet("ETHERIP","/opt/epics/synApps_6_3/support/ether_ip-ether_ip-3-3")
epicsEnvSet("GALIL","/opt/epics/synApps_6_3/support/Galil-4-0-00")
epicsEnvSet("IP","/opt/epics/synApps_6_3/support/ip-R2-22")
epicsEnvSet("IP330","/opt/epics/synApps_6_3/support/ip330-R2-10")
epicsEnvSet("IPAC","/opt/epics/synApps_6_3/support/ipac-2-16")
epicsEnvSet("IPUNIDIG","/opt/epics/synApps_6_3/support/ipUnidig-R2-12")
epicsEnvSet("LABJACK","/opt/epics/synApps_6_3/support/LabJack-master")
epicsEnvSet("LOVE","/opt/epics/synApps_6_3/support/love-R3-2-9")
epicsEnvSet("LUA","/opt/epics/synApps_6_3/support/lua-R3-1")
epicsEnvSet("MCA","/opt/epics/synApps_6_3/support/mca-R7-10")
epicsEnvSet("MEASCOMP","/opt/epics/synApps_6_3/support/measComp-R4-2")
epicsEnvSet("MODBUS","/opt/epics/synApps_6_3/support/modbus-R3-3")
epicsEnvSet("MOTOR","/opt/epics/synApps_6_3/support/motor-R7-3-1")
epicsEnvSet("OPTICS","/opt/epics/synApps_6_3/support/optics-R2-14")
epicsEnvSet("SCALER","/opt/epics/synApps_6_3/support/scaler-4-1")
epicsEnvSet("SNCSEQ","/opt/epics/synApps_6_3/support/sequencer-mirror-R2-2-9")
epicsEnvSet("SOFTGLUE","/opt/epics/synApps_6_3/support/softGlue-R2-8-4")
epicsEnvSet("SOFTGLUEZYNQ","/opt/epics/synApps_6_3/support/softGlueZynq-R2-0-5")
epicsEnvSet("SSCAN","/opt/epics/synApps_6_3/support/sscan-R2-11-6")
epicsEnvSet("STD","/opt/epics/synApps_6_3/support/std-R3-6-4")
epicsEnvSet("STREAM","/opt/epics/synApps_6_3/support/StreamDevice-2-8-24")
epicsEnvSet("VAC","/opt/epics/synApps_6_3/support/vac-R1-9-2")
epicsEnvSet("VME","/opt/epics/synApps_6_3/support/vme-R2-9-5")
epicsEnvSet("XXX","/opt/epics/synApps_6_3/support/xxx-R6-3")
epicsEnvSet("YOKOGAWA_DAS","/opt/epics/synApps_6_3/support/Yokogawa_DAS-R2-0-2")
epicsEnvSet("ALLENBRADLEY","/opt/epics/synApps_6_3/support/allenBradley-2-3")
epicsEnvSet("ULDAQ","/opt/epics/synApps_6_3/support/measComp-R4-2/libuldaq-1.2.1")
# Shell prompt
epicsEnvSet("IOCSH_PS1", "$(IOC)> ")
# prefix used for all PVs in this IOC
epicsEnvSet("PREFIX", "18id:")
#For devIocStats
epicsEnvSet("ENGINEER", "Guerra")
epicsEnvSet("LOCATION", "18-ID")
epicsEnvSet("GROUP", "BC")
# search path for database files
epicsEnvSet("EPICS_DB_INCLUDE_PATH", "$(DEVIOCSTATS)/db")
# set the protocol path for streamDevice
epicsEnvSet("STREAM_PROTOCOL_PATH", ".")
# Specify largest array CA will transport
# Note for N doubles, need N*8 bytes+some overhead
epicsEnvSet("EPICS_CA_MAX_ARRAY_BYTES", 64010)
### save_restore setup, change SAVE_PATH if you are having autosave manage its own NFS mount
#iocshLoad("$(AUTOSAVE)/iocsh/autosave_settings.iocsh", "PREFIX=$(PREFIX), SAVE_PATH=$(TOP)/iocBoot/$(IOC), NUM_SEQ=12, SEQ_PERIOD=43200")
#iocshLoad("$(TOP)/iocBoot/$(IOC)/iocsh/autosaveBuild.iocsh",     "PREFIX=$(PREFIX), BUILD_PATH=autosave")
#iocshLoad("$(AUTOSAVE)/iocsh/save_restore.iocsh",      "PREFIX=$(PREFIX), POSITIONS_FILE=auto_positions, SETTINGS_FILE=auto_settings")
###
# specify directories in which to search for included request files
# Note that the vxWorks variables (e.g., 'startup') are from cdCommands
#set_requestfile_path("$(AREA_DETECTOR)", "ADApp/Db")
#set_requestfile_path("$(ADCORE)", "ADApp/Db")
#set_requestfile_path("$(AUTOSAVE)/db")
#set_requestfile_path("$(BUSY)/db")
#set_requestfile_path("$(CALC)/db")
#set_requestfile_path("$(CAMAC)", "camacApp/Db")
#set_requestfile_path("$(CAPUTRECORDER)/db")
#set_requestfile_path("$(DAC128V)", "dac128VApp/Db")
#set_requestfile_path("$(DELAYGEN)/db")
#set_requestfile_path("$(DXP)", "dxpApp/Db")
#set_requestfile_path("$(DXPSITORO)", "dxpApp/Db")
#set_requestfile_path("$(IP)/db")
#set_requestfile_path("$(IP330)", "ip330App/Db")
#set_requestfile_path("$(IPUNIDIG)", "ipUnidigApp/Db")
#set_requestfile_path("$(LOVE)/db")
#set_requestfile_path("$(LUA)/db")
#set_requestfile_path("$(MCA)", "mcaApp/Db")
#set_requestfile_path("$(MEASCOMP)", "measCompApp/Db")
#set_requestfile_path("$(MODBUS)", "modbusApp/Db")
#set_requestfile_path("$(MOTOR)/db")
#set_requestfile_path("$(OPTICS)/db")
#set_requestfile_path("$(QUADEM)", "quadEMApp/Db")
#set_requestfile_path("$(SSCAN)/db")
#set_requestfile_path("$(SOFTGLUE)/db")
#set_requestfile_path("$(SOFTGLUEZYNQ)/db")
#set_requestfile_path("$(STD)/db")
#set_requestfile_path("$(VAC)/db")
#set_requestfile_path("$(VME)/db")
#set_requestfile_path("$(YOKOGAWA_DAS)/db")
set_requestfile_path("$(TOP)/db")
# Debug-output level
#save_restoreSet_Debug(0)
### Scan-support software
#iocshLoad("$(SSCAN)/iocsh/sscan.iocsh", "PREFIX=$(PREFIX), MAX_PTS=1000, REQ_FILE=saveData.req")
#iocshLoad("$(AUTOSAVE)/iocsh/configMenu.iocsh", "PREFIX=$(PREFIX),CONFIG=scan1")
### Stuff for user programming ###
#iocshLoad("$(CALC)/iocsh/userCalc.iocsh", "PREFIX=$(PREFIX), ARRAY_SIZE=8000")
# Load 10 more of all the user calcs, N=1 creates usercalcs 10-19
#iocshLoad("$(CALC)/iocsh/userCalc_extra.iocsh", "PREFIX=$(PREFIX), N=1, ARRAY_SIZE=8000")
# Load 20 userScripts
#dbLoadRecords("$(LUA)/luaApp/Db/luascripts10.db", "P=$(PREFIX), R=set1:")
#dbLoadRecords("$(LUA)/luaApp/Db/luascripts10.db", "P=$(PREFIX), R=set2:")
# string sequence (sseq) records
#iocshLoad("$(CALC)/iocsh/sseq.iocsh", "PREFIX=$(PREFIX), INSTANCE=ES:")
# busy record
#dbLoadRecords("$(BUSY)/busyApp/Db/busyRecord.db", "P=$(PREFIX),R=mybusy1")
#dbLoadRecords("$(BUSY)/busyApp/Db/busyRecord.db", "P=$(PREFIX),R=mybusy2")
### Load database record for alive heartbeating support.
# RHOST specifies the IP address that receives the heartbeats.
#dbLoadRecords("$(ALIVE)/aliveApp/Db/alive.db", "P=$(PREFIX),RHOST=164.54.100.11")
#dbLoadRecords("$(ALIVE)/aliveApp/Db/aliveMSGCalc.db", "P=$(PREFIX)")
# Miscellaneous PV's, such as burtResult
#dbLoadRecords("$(STD)/stdApp/Db/misc.db","P=$(PREFIX)")
## Initialize BLEPS EtherIP driver
drvEtherIP_init()
EIP_verbosity(4)
# Use 480 or smaller, like 450
EIP_buffer_limit(480)
## Configure BLEPS host
# 000.00.000.00   ID000     PLC NETWO 00:00:00:00:00:00
# vxWorks Only
# hostAdd("000","000.00.000.00")
## Define BLEPS PLC
drvEtherIP_define_PLC("bleps","164.54.204.15",0)
## Load BLEPS database(s)
dbLoadTemplate("substitutions/bleps.substitutions")
# Debug-output level
save_restoreSet_Debug(0)
# Set PV prefix
save_restoreSet_status_prefix("18ID:")
# Ok to save/restore save sets with missing values (no CA connection to PV)?
save_restoreSet_IncompleteSetsOk(1)
# Save dated backup files?
save_restoreSet_DatedBackupFiles(1)
# Number of sequenced backup files to write
save_restoreSet_NumSeqFiles(3)
# Time interval between sequenced backups
save_restoreSet_SeqPeriodInSeconds(300)
# Specify directories to search for save files
set_savefile_path(".","autosave")
###
# specify what save files should be restored.  Note these files must be
# in the directory specified in set_savefile_path(), or, if that function
# has not been called, from the directory current when iocInit is invoked
#set_pass0_restoreFile("auto_positions.sav")
# Note doAfterIocInit() supplied by std module.
#doAfterIocInit("create_monitor_set('auto_positions.req',5,'P=kag:')")
set_pass0_restoreFile("auto_settings.sav")
set_pass1_restoreFile("auto_settings.sav")
# Specify directories to search for request files
set_requestfile_path(".",  "")
set_requestfile_path(".",  "autosave")
set_requestfile_path($(AUTOSAVE),"asApp/Db")
# set_requestfile_path($(TOP), "LabJackApp/Db")
# Load database
dbLoadRecords("$(AUTOSAVE)/asApp/Db/save_restoreStatus.db", "P=18ID:")
###############################################################################
iocInit
###############################################################################
# write all the PV names to a local file
dbl > dbl-all.txt
# Diagnostic: CA links in all records
#dbcar(0,1)
###
### Set digital outputs low, otherwise they float
###
# Must match the substitions file PV names
#dbpf 18ID:LJT4:1:DO0 0
#dbpf 18ID:LJT4:1:DO1 0
#dbpf 18ID:LJT4:1:DO2 0
#dbpf 18ID:LJT4:1:DO3 0
#dbpf 18ID:LJT4:1:DO4 0
#dbpf 18ID:LJT4:1:DO5 0
#dbpf 18ID:LJT4:1:DO6 0
#dbpf 18ID:LJT4:1:DO7 0
#dbpf 18ID:LJT4:1:DO8 0
#dbpf 18ID:LJT4:1:DO9 0
#dbpf 18ID:LJT4:1:DO10 0
#dbpf 18ID:LJT4:1:DO11 0
#dbpf 18ID:LJT4:1:DO12 0
#dbpf 18ID:LJT4:1:DO13 0
#dbpf 18ID:LJT4:1:DO14 0
#dbpf 18ID:LJT4:1:DO15 0
#dbpf 18ID:LJT4:1:AO0 0
#dbpf 18ID:LJT4:1:AO1 0
#dbpf 18ID:LJT4:2:DO0 1
#dbpf 18ID:LJT4:2:DO1 1
#dbpf 18ID:LJT4:2:DO2 1
#dbpf 18ID:LJT4:2:DO3 1
#dbpf 18ID:LJT4:2:DO4 1
#dbpf 18ID:LJT4:2:DO5 1
#dbpf 18ID:LJT4:2:DO6 1
#dbpf 18ID:LJT4:2:DO7 1
#dbpf 18ID:LJT4:2:DO8 0
#dbpf 18ID:LJT4:2:DO9 0
#dbpf 18ID:LJT4:2:DO10 0
#dbpf 18ID:LJT4:2:DO11 0
#dbpf 18ID:LJT4:2:DO12 0
#dbpf 18ID:LJT4:2:DO13 0
#dbpf 18ID:LJT4:2:DO14 0
#dbpf 18ID:LJT4:2:DO15 0
#dbpf 18ID:LJT4:2:AO0 0
#dbpf 18ID:LJT4:2:AO1 0
#dbpf 18ID:LJT4:3:AO0 0
#dbpf 18ID:LJT4:3:AO1 0
# print the time our boot was finished
date
epicsEnvSet("IOC","ioc18id")
epicsEnvSet("TOP","/opt/epics/iocs/epics_iocs/soft_iocs/18id_con")
epicsEnvSet("SUPPORT","/opt/epics/synApps_6_3/support")
epicsEnvSet("EPICS_BASE","/opt/epics/base")
epicsEnvSet("ALIVE","/opt/epics/synApps_6_3/support/alive-R1-4-1")
epicsEnvSet("ASYN","/opt/epics/synApps_6_3/support/asyn-R4-44-2")
epicsEnvSet("AUTOSAVE","/opt/epics/synApps_6_3/support/autosave-R5-11")
epicsEnvSet("BUSY","/opt/epics/synApps_6_3/support/busy-R1-7-4")
epicsEnvSet("CALC","/opt/epics/synApps_6_3/support/calc-R3-7-5")
epicsEnvSet("CAMAC","/opt/epics/synApps_6_3/support/camac-R2-7-5")
epicsEnvSet("CAPUTRECORDER","/opt/epics/synApps_6_3/support/caputRecorder-R1-7-6")
epicsEnvSet("DAC128V","/opt/epics/synApps_6_3/support/dac128V-R2-10-1")
epicsEnvSet("DELAYGEN","/opt/epics/synApps_6_3/support/delaygen-R1-2-4")
epicsEnvSet("DEVIOCSTATS","/opt/epics/synApps_6_3/support/iocStats-3-1-16")
epicsEnvSet("ETHERIP","/opt/epics/synApps_6_3/support/ether_ip-ether_ip-3-3")
epicsEnvSet("GALIL","/opt/epics/synApps_6_3/support/Galil-4-0-02")
epicsEnvSet("IP","/opt/epics/synApps_6_3/support/ip-R2-22")
epicsEnvSet("IP330","/opt/epics/synApps_6_3/support/ip330-R2-10")
epicsEnvSet("IPAC","/opt/epics/synApps_6_3/support/ipac-2-16")
epicsEnvSet("IPUNIDIG","/opt/epics/synApps_6_3/support/ipUnidig-R2-12")
epicsEnvSet("LABJACK","/opt/epics/synApps_6_3/support/LabJack-master")
epicsEnvSet("LOVE","/opt/epics/synApps_6_3/support/love-R3-2-9")
epicsEnvSet("LUA","/opt/epics/synApps_6_3/support/lua-R3-1")
epicsEnvSet("MCA","/opt/epics/synApps_6_3/support/mca-R7-10")
epicsEnvSet("MEASCOMP","/opt/epics/synApps_6_3/support/measComp-master")
epicsEnvSet("MODBUS","/opt/epics/synApps_6_3/support/modbus-R3-3")
epicsEnvSet("MOTOR","/opt/epics/synApps_6_3/support/motor-R7-3-1")
epicsEnvSet("OPTICS","/opt/epics/synApps_6_3/support/optics-R2-14")
epicsEnvSet("SCALER","/opt/epics/synApps_6_3/support/scaler-4-1")
epicsEnvSet("SNCSEQ","/opt/epics/synApps_6_3/support/sequencer-mirror-R2-2-9")
epicsEnvSet("SOFTGLUE","/opt/epics/synApps_6_3/support/softGlue-R2-8-4")
epicsEnvSet("SOFTGLUEZYNQ","/opt/epics/synApps_6_3/support/softGlueZynq-R2-0-5")
epicsEnvSet("SSCAN","/opt/epics/synApps_6_3/support/sscan-R2-11-6")
epicsEnvSet("STD","/opt/epics/synApps_6_3/support/std-R3-6-4")
epicsEnvSet("STREAM","/opt/epics/synApps_6_3/support/StreamDevice-2-8-24")
epicsEnvSet("VAC","/opt/epics/synApps_6_3/support/vac-R1-9-2")
epicsEnvSet("VME","/opt/epics/synApps_6_3/support/vme-R2-9-5")
epicsEnvSet("XXX","/opt/epics/synApps_6_3/support/xxx-R6-3")
epicsEnvSet("YOKOGAWA_DAS","/opt/epics/synApps_6_3/support/Yokogawa_DAS-R2-0-2")
epicsEnvSet("ALLENBRADLEY","/opt/epics/synApps_6_3/support/allenBradley-2-3")
epicsEnvSet("ULDAQ","/opt/epics/synApps_6_3/support/measComp-R4-2/libuldaq-1.2.1")
# Shell prompt
epicsEnvSet("IOCSH_PS1", "$(IOC)> ")
# prefix used for all PVs in this IOC
epicsEnvSet("PREFIX", "18id:")
#For devIocStats
epicsEnvSet("ENGINEER", "Guerra")
epicsEnvSet("LOCATION", "18-ID")
epicsEnvSet("GROUP", "BC")
# search path for database files
epicsEnvSet("EPICS_DB_INCLUDE_PATH", "$(DEVIOCSTATS)/db")
# set the protocol path for streamDevice
epicsEnvSet("STREAM_PROTOCOL_PATH", ".")
# Specify largest array CA will transport
# Note for N doubles, need N*8 bytes+some overhead
epicsEnvSet("EPICS_CA_MAX_ARRAY_BYTES", 64010)
### save_restore setup, change SAVE_PATH if you are having autosave manage its own NFS mount
#iocshLoad("$(AUTOSAVE)/iocsh/autosave_settings.iocsh", "PREFIX=$(PREFIX), SAVE_PATH=$(TOP)/iocBoot/$(IOC), NUM_SEQ=12, SEQ_PERIOD=43200")
#iocshLoad("$(TOP)/iocBoot/$(IOC)/iocsh/autosaveBuild.iocsh",     "PREFIX=$(PREFIX), BUILD_PATH=autosave")
#iocshLoad("$(AUTOSAVE)/iocsh/save_restore.iocsh",      "PREFIX=$(PREFIX), POSITIONS_FILE=auto_positions, SETTINGS_FILE=auto_settings")
###
# specify directories in which to search for included request files
# Note that the vxWorks variables (e.g., 'startup') are from cdCommands
#set_requestfile_path("$(AREA_DETECTOR)", "ADApp/Db")
#set_requestfile_path("$(ADCORE)", "ADApp/Db")
#set_requestfile_path("$(AUTOSAVE)/db")
#set_requestfile_path("$(BUSY)/db")
#set_requestfile_path("$(CALC)/db")
#set_requestfile_path("$(CAMAC)", "camacApp/Db")
#set_requestfile_path("$(CAPUTRECORDER)/db")
#set_requestfile_path("$(DAC128V)", "dac128VApp/Db")
#set_requestfile_path("$(DELAYGEN)/db")
#set_requestfile_path("$(DXP)", "dxpApp/Db")
#set_requestfile_path("$(DXPSITORO)", "dxpApp/Db")
#set_requestfile_path("$(IP)/db")
#set_requestfile_path("$(IP330)", "ip330App/Db")
#set_requestfile_path("$(IPUNIDIG)", "ipUnidigApp/Db")
#set_requestfile_path("$(LOVE)/db")
#set_requestfile_path("$(LUA)/db")
#set_requestfile_path("$(MCA)", "mcaApp/Db")
#set_requestfile_path("$(MEASCOMP)", "measCompApp/Db")
#set_requestfile_path("$(MODBUS)", "modbusApp/Db")
#set_requestfile_path("$(MOTOR)/db")
#set_requestfile_path("$(OPTICS)/db")
#set_requestfile_path("$(QUADEM)", "quadEMApp/Db")
#set_requestfile_path("$(SSCAN)/db")
#set_requestfile_path("$(SOFTGLUE)/db")
#set_requestfile_path("$(SOFTGLUEZYNQ)/db")
#set_requestfile_path("$(STD)/db")
#set_requestfile_path("$(VAC)/db")
#set_requestfile_path("$(VME)/db")
#set_requestfile_path("$(YOKOGAWA_DAS)/db")
set_requestfile_path("$(TOP)/db")
# Debug-output level
#save_restoreSet_Debug(0)
### Scan-support software
#iocshLoad("$(SSCAN)/iocsh/sscan.iocsh", "PREFIX=$(PREFIX), MAX_PTS=1000, REQ_FILE=saveData.req")
#iocshLoad("$(AUTOSAVE)/iocsh/configMenu.iocsh", "PREFIX=$(PREFIX),CONFIG=scan1")
### Stuff for user programming ###
#iocshLoad("$(CALC)/iocsh/userCalc.iocsh", "PREFIX=$(PREFIX), ARRAY_SIZE=8000")
# Load 10 more of all the user calcs, N=1 creates usercalcs 10-19
#iocshLoad("$(CALC)/iocsh/userCalc_extra.iocsh", "PREFIX=$(PREFIX), N=1, ARRAY_SIZE=8000")
# Load 20 userScripts
#dbLoadRecords("$(LUA)/luaApp/Db/luascripts10.db", "P=$(PREFIX), R=set1:")
#dbLoadRecords("$(LUA)/luaApp/Db/luascripts10.db", "P=$(PREFIX), R=set2:")
# string sequence (sseq) records
#iocshLoad("$(CALC)/iocsh/sseq.iocsh", "PREFIX=$(PREFIX), INSTANCE=ES:")
# busy record
#dbLoadRecords("$(BUSY)/busyApp/Db/busyRecord.db", "P=$(PREFIX),R=mybusy1")
#dbLoadRecords("$(BUSY)/busyApp/Db/busyRecord.db", "P=$(PREFIX),R=mybusy2")
### Load database record for alive heartbeating support.
# RHOST specifies the IP address that receives the heartbeats.
#dbLoadRecords("$(ALIVE)/aliveApp/Db/alive.db", "P=$(PREFIX),RHOST=164.54.100.11")
#dbLoadRecords("$(ALIVE)/aliveApp/Db/aliveMSGCalc.db", "P=$(PREFIX)")
# Miscellaneous PV's, such as burtResult
#dbLoadRecords("$(STD)/stdApp/Db/misc.db","P=$(PREFIX)")
## Initialize BLEPS EtherIP driver
drvEtherIP_init()
EIP_verbosity(4)
# Use 480 or smaller, like 450
EIP_buffer_limit(480)
## Configure BLEPS host
# 000.00.000.00   ID000     PLC NETWO 00:00:00:00:00:00
# vxWorks Only
# hostAdd("000","000.00.000.00")
## Define BLEPS PLC
drvEtherIP_define_PLC("bleps","164.54.204.15",0)
## Load BLEPS database(s)
dbLoadTemplate("substitutions/bleps.substitutions")
# Debug-output level
save_restoreSet_Debug(0)
# Set PV prefix
save_restoreSet_status_prefix("18ID:")
# Ok to save/restore save sets with missing values (no CA connection to PV)?
save_restoreSet_IncompleteSetsOk(1)
# Save dated backup files?
save_restoreSet_DatedBackupFiles(1)
# Number of sequenced backup files to write
save_restoreSet_NumSeqFiles(3)
# Time interval between sequenced backups
save_restoreSet_SeqPeriodInSeconds(300)
# Specify directories to search for save files
set_savefile_path(".","autosave")
###
# specify what save files should be restored.  Note these files must be
# in the directory specified in set_savefile_path(), or, if that function
# has not been called, from the directory current when iocInit is invoked
#set_pass0_restoreFile("auto_positions.sav")
# Note doAfterIocInit() supplied by std module.
#doAfterIocInit("create_monitor_set('auto_positions.req',5,'P=kag:')")
set_pass0_restoreFile("auto_settings.sav")
set_pass1_restoreFile("auto_settings.sav")
# Specify directories to search for request files
set_requestfile_path(".",  "")
set_requestfile_path(".",  "autosave")
set_requestfile_path($(AUTOSAVE),"asApp/Db")
# set_requestfile_path($(TOP), "LabJackApp/Db")
# Load database
dbLoadRecords("$(AUTOSAVE)/asApp/Db/save_restoreStatus.db", "P=18ID:")
###############################################################################
iocInit
###############################################################################
# write all the PV names to a local file
dbl > dbl-all.txt
# Diagnostic: CA links in all records
#dbcar(0,1)
###
### Set digital outputs low, otherwise they float
###
# Must match the substitions file PV names
#dbpf 18ID:LJT4:1:DO0 0
#dbpf 18ID:LJT4:1:DO1 0
#dbpf 18ID:LJT4:1:DO2 0
#dbpf 18ID:LJT4:1:DO3 0
#dbpf 18ID:LJT4:1:DO4 0
#dbpf 18ID:LJT4:1:DO5 0
#dbpf 18ID:LJT4:1:DO6 0
#dbpf 18ID:LJT4:1:DO7 0
#dbpf 18ID:LJT4:1:DO8 0
#dbpf 18ID:LJT4:1:DO9 0
#dbpf 18ID:LJT4:1:DO10 0
#dbpf 18ID:LJT4:1:DO11 0
#dbpf 18ID:LJT4:1:DO12 0
#dbpf 18ID:LJT4:1:DO13 0
#dbpf 18ID:LJT4:1:DO14 0
#dbpf 18ID:LJT4:1:DO15 0
#dbpf 18ID:LJT4:1:AO0 0
#dbpf 18ID:LJT4:1:AO1 0
#dbpf 18ID:LJT4:2:DO0 1
#dbpf 18ID:LJT4:2:DO1 1
#dbpf 18ID:LJT4:2:DO2 1
#dbpf 18ID:LJT4:2:DO3 1
#dbpf 18ID:LJT4:2:DO4 1
#dbpf 18ID:LJT4:2:DO5 1
#dbpf 18ID:LJT4:2:DO6 1
#dbpf 18ID:LJT4:2:DO7 1
#dbpf 18ID:LJT4:2:DO8 0
#dbpf 18ID:LJT4:2:DO9 0
#dbpf 18ID:LJT4:2:DO10 0
#dbpf 18ID:LJT4:2:DO11 0
#dbpf 18ID:LJT4:2:DO12 0
#dbpf 18ID:LJT4:2:DO13 0
#dbpf 18ID:LJT4:2:DO14 0
#dbpf 18ID:LJT4:2:DO15 0
#dbpf 18ID:LJT4:2:AO0 0
#dbpf 18ID:LJT4:2:AO1 0
#dbpf 18ID:LJT4:3:AO0 0
#dbpf 18ID:LJT4:3:AO1 0
# print the time our boot was finished
date
epicsEnvSet("IOC","ioc18id")
epicsEnvSet("TOP","/opt/epics/iocs/epics_iocs/soft_iocs/BLEEPS")
epicsEnvSet("SUPPORT","/opt/epics/synApps_6_3/support")
epicsEnvSet("EPICS_BASE","/opt/epics/base")
epicsEnvSet("ALIVE","/opt/epics/synApps_6_3/support/alive-R1-4-1")
epicsEnvSet("ASYN","/opt/epics/synApps_6_3/support/asyn-R4-44-2")
epicsEnvSet("AUTOSAVE","/opt/epics/synApps_6_3/support/autosave-R5-11")
epicsEnvSet("BUSY","/opt/epics/synApps_6_3/support/busy-R1-7-4")
epicsEnvSet("CALC","/opt/epics/synApps_6_3/support/calc-R3-7-5")
epicsEnvSet("CAMAC","/opt/epics/synApps_6_3/support/camac-R2-7-5")
epicsEnvSet("CAPUTRECORDER","/opt/epics/synApps_6_3/support/caputRecorder-R1-7-6")
epicsEnvSet("DAC128V","/opt/epics/synApps_6_3/support/dac128V-R2-10-1")
epicsEnvSet("DELAYGEN","/opt/epics/synApps_6_3/support/delaygen-R1-2-4")
epicsEnvSet("DEVIOCSTATS","/opt/epics/synApps_6_3/support/iocStats-3-1-16")
epicsEnvSet("ETHERIP","/opt/epics/synApps_6_3/support/ether_ip-ether_ip-3-3")
epicsEnvSet("GALIL","/opt/epics/synApps_6_3/support/Galil-4-0-02")
epicsEnvSet("IP","/opt/epics/synApps_6_3/support/ip-R2-22")
epicsEnvSet("IP330","/opt/epics/synApps_6_3/support/ip330-R2-10")
epicsEnvSet("IPAC","/opt/epics/synApps_6_3/support/ipac-2-16")
epicsEnvSet("IPUNIDIG","/opt/epics/synApps_6_3/support/ipUnidig-R2-12")
epicsEnvSet("LABJACK","/opt/epics/synApps_6_3/support/LabJack-master")
epicsEnvSet("LOVE","/opt/epics/synApps_6_3/support/love-R3-2-9")
epicsEnvSet("LUA","/opt/epics/synApps_6_3/support/lua-R3-1")
epicsEnvSet("MCA","/opt/epics/synApps_6_3/support/mca-R7-10")
epicsEnvSet("MEASCOMP","/opt/epics/synApps_6_3/support/measComp-master")
epicsEnvSet("MODBUS","/opt/epics/synApps_6_3/support/modbus-R3-3")
epicsEnvSet("MOTOR","/opt/epics/synApps_6_3/support/motor-R7-3-1")
epicsEnvSet("OPTICS","/opt/epics/synApps_6_3/support/optics-R2-14")
epicsEnvSet("SCALER","/opt/epics/synApps_6_3/support/scaler-4-1")
epicsEnvSet("SNCSEQ","/opt/epics/synApps_6_3/support/sequencer-mirror-R2-2-9")
epicsEnvSet("SOFTGLUE","/opt/epics/synApps_6_3/support/softGlue-R2-8-4")
epicsEnvSet("SOFTGLUEZYNQ","/opt/epics/synApps_6_3/support/softGlueZynq-R2-0-5")
epicsEnvSet("SSCAN","/opt/epics/synApps_6_3/support/sscan-R2-11-6")
epicsEnvSet("STD","/opt/epics/synApps_6_3/support/std-R3-6-4")
epicsEnvSet("STREAM","/opt/epics/synApps_6_3/support/StreamDevice-2-8-24")
epicsEnvSet("VAC","/opt/epics/synApps_6_3/support/vac-R1-9-2")
epicsEnvSet("VME","/opt/epics/synApps_6_3/support/vme-R2-9-5")
epicsEnvSet("XXX","/opt/epics/synApps_6_3/support/xxx-R6-3")
epicsEnvSet("YOKOGAWA_DAS","/opt/epics/synApps_6_3/support/Yokogawa_DAS-R2-0-2")
epicsEnvSet("ALLENBRADLEY","/opt/epics/synApps_6_3/support/allenBradley-2-3")
epicsEnvSet("ULDAQ","/opt/epics/synApps_6_3/support/measComp-R4-2/libuldaq-1.2.1")
# Shell prompt
epicsEnvSet("IOCSH_PS1", "$(IOC)> ")
# prefix used for all PVs in this IOC
epicsEnvSet("PREFIX", "18id:")
#For devIocStats
epicsEnvSet("ENGINEER", "Guerra")
epicsEnvSet("LOCATION", "18-ID")
epicsEnvSet("GROUP", "BC")
# search path for database files
epicsEnvSet("EPICS_DB_INCLUDE_PATH", "$(DEVIOCSTATS)/db")
# set the protocol path for streamDevice
epicsEnvSet("STREAM_PROTOCOL_PATH", ".")
# Specify largest array CA will transport
# Note for N doubles, need N*8 bytes+some overhead
epicsEnvSet("EPICS_CA_MAX_ARRAY_BYTES", 64010)
### save_restore setup, change SAVE_PATH if you are having autosave manage its own NFS mount
#iocshLoad("$(AUTOSAVE)/iocsh/autosave_settings.iocsh", "PREFIX=$(PREFIX), SAVE_PATH=$(TOP)/iocBoot/$(IOC), NUM_SEQ=12, SEQ_PERIOD=43200")
#iocshLoad("$(TOP)/iocBoot/$(IOC)/iocsh/autosaveBuild.iocsh",     "PREFIX=$(PREFIX), BUILD_PATH=autosave")
#iocshLoad("$(AUTOSAVE)/iocsh/save_restore.iocsh",      "PREFIX=$(PREFIX), POSITIONS_FILE=auto_positions, SETTINGS_FILE=auto_settings")
###
# specify directories in which to search for included request files
# Note that the vxWorks variables (e.g., 'startup') are from cdCommands
#set_requestfile_path("$(AREA_DETECTOR)", "ADApp/Db")
#set_requestfile_path("$(ADCORE)", "ADApp/Db")
#set_requestfile_path("$(AUTOSAVE)/db")
#set_requestfile_path("$(BUSY)/db")
#set_requestfile_path("$(CALC)/db")
#set_requestfile_path("$(CAMAC)", "camacApp/Db")
#set_requestfile_path("$(CAPUTRECORDER)/db")
#set_requestfile_path("$(DAC128V)", "dac128VApp/Db")
#set_requestfile_path("$(DELAYGEN)/db")
#set_requestfile_path("$(DXP)", "dxpApp/Db")
#set_requestfile_path("$(DXPSITORO)", "dxpApp/Db")
#set_requestfile_path("$(IP)/db")
#set_requestfile_path("$(IP330)", "ip330App/Db")
#set_requestfile_path("$(IPUNIDIG)", "ipUnidigApp/Db")
#set_requestfile_path("$(LOVE)/db")
#set_requestfile_path("$(LUA)/db")
#set_requestfile_path("$(MCA)", "mcaApp/Db")
#set_requestfile_path("$(MEASCOMP)", "measCompApp/Db")
#set_requestfile_path("$(MODBUS)", "modbusApp/Db")
#set_requestfile_path("$(MOTOR)/db")
#set_requestfile_path("$(OPTICS)/db")
#set_requestfile_path("$(QUADEM)", "quadEMApp/Db")
#set_requestfile_path("$(SSCAN)/db")
#set_requestfile_path("$(SOFTGLUE)/db")
#set_requestfile_path("$(SOFTGLUEZYNQ)/db")
#set_requestfile_path("$(STD)/db")
#set_requestfile_path("$(VAC)/db")
#set_requestfile_path("$(VME)/db")
#set_requestfile_path("$(YOKOGAWA_DAS)/db")
set_requestfile_path("$(TOP)/db")
# Debug-output level
#save_restoreSet_Debug(0)
### Scan-support software
#iocshLoad("$(SSCAN)/iocsh/sscan.iocsh", "PREFIX=$(PREFIX), MAX_PTS=1000, REQ_FILE=saveData.req")
#iocshLoad("$(AUTOSAVE)/iocsh/configMenu.iocsh", "PREFIX=$(PREFIX),CONFIG=scan1")
### Stuff for user programming ###
#iocshLoad("$(CALC)/iocsh/userCalc.iocsh", "PREFIX=$(PREFIX), ARRAY_SIZE=8000")
# Load 10 more of all the user calcs, N=1 creates usercalcs 10-19
#iocshLoad("$(CALC)/iocsh/userCalc_extra.iocsh", "PREFIX=$(PREFIX), N=1, ARRAY_SIZE=8000")
# Load 20 userScripts
#dbLoadRecords("$(LUA)/luaApp/Db/luascripts10.db", "P=$(PREFIX), R=set1:")
#dbLoadRecords("$(LUA)/luaApp/Db/luascripts10.db", "P=$(PREFIX), R=set2:")
# string sequence (sseq) records
#iocshLoad("$(CALC)/iocsh/sseq.iocsh", "PREFIX=$(PREFIX), INSTANCE=ES:")
# busy record
#dbLoadRecords("$(BUSY)/busyApp/Db/busyRecord.db", "P=$(PREFIX),R=mybusy1")
#dbLoadRecords("$(BUSY)/busyApp/Db/busyRecord.db", "P=$(PREFIX),R=mybusy2")
### Load database record for alive heartbeating support.
# RHOST specifies the IP address that receives the heartbeats.
#dbLoadRecords("$(ALIVE)/aliveApp/Db/alive.db", "P=$(PREFIX),RHOST=164.54.100.11")
#dbLoadRecords("$(ALIVE)/aliveApp/Db/aliveMSGCalc.db", "P=$(PREFIX)")
# Miscellaneous PV's, such as burtResult
#dbLoadRecords("$(STD)/stdApp/Db/misc.db","P=$(PREFIX)")
## Initialize BLEPS EtherIP driver
drvEtherIP_init()
EIP_verbosity(4)
# Use 480 or smaller, like 450
EIP_buffer_limit(480)
## Configure BLEPS host
# 000.00.000.00   ID000     PLC NETWO 00:00:00:00:00:00
# vxWorks Only
# hostAdd("000","000.00.000.00")
## Define BLEPS PLC
drvEtherIP_define_PLC("bleps","164.54.204.15",0)
## Load BLEPS database(s)
dbLoadTemplate("substitutions/bleps.substitutions")
# Debug-output level
save_restoreSet_Debug(0)
# Set PV prefix
save_restoreSet_status_prefix("18ID:")
# Ok to save/restore save sets with missing values (no CA connection to PV)?
save_restoreSet_IncompleteSetsOk(1)
# Save dated backup files?
save_restoreSet_DatedBackupFiles(1)
# Number of sequenced backup files to write
save_restoreSet_NumSeqFiles(3)
# Time interval between sequenced backups
save_restoreSet_SeqPeriodInSeconds(300)
# Specify directories to search for save files
set_savefile_path(".","autosave")
###
# specify what save files should be restored.  Note these files must be
# in the directory specified in set_savefile_path(), or, if that function
# has not been called, from the directory current when iocInit is invoked
#set_pass0_restoreFile("auto_positions.sav")
# Note doAfterIocInit() supplied by std module.
#doAfterIocInit("create_monitor_set('auto_positions.req',5,'P=kag:')")
set_pass0_restoreFile("auto_settings.sav")
set_pass1_restoreFile("auto_settings.sav")
# Specify directories to search for request files
set_requestfile_path(".",  "")
set_requestfile_path(".",  "autosave")
set_requestfile_path($(AUTOSAVE),"asApp/Db")
# set_requestfile_path($(TOP), "LabJackApp/Db")
# Load database
dbLoadRecords("$(AUTOSAVE)/asApp/Db/save_restoreStatus.db", "P=18ID:")
###############################################################################
iocInit
###############################################################################
# write all the PV names to a local file
dbl > dbl-all.txt
# Diagnostic: CA links in all records
#dbcar(0,1)
###
### Set digital outputs low, otherwise they float
###
# Must match the substitions file PV names
#dbpf 18ID:LJT4:1:DO0 0
#dbpf 18ID:LJT4:1:DO1 0
#dbpf 18ID:LJT4:1:DO2 0
#dbpf 18ID:LJT4:1:DO3 0
#dbpf 18ID:LJT4:1:DO4 0
#dbpf 18ID:LJT4:1:DO5 0
#dbpf 18ID:LJT4:1:DO6 0
#dbpf 18ID:LJT4:1:DO7 0
#dbpf 18ID:LJT4:1:DO8 0
#dbpf 18ID:LJT4:1:DO9 0
#dbpf 18ID:LJT4:1:DO10 0
#dbpf 18ID:LJT4:1:DO11 0
#dbpf 18ID:LJT4:1:DO12 0
#dbpf 18ID:LJT4:1:DO13 0
#dbpf 18ID:LJT4:1:DO14 0
#dbpf 18ID:LJT4:1:DO15 0
#dbpf 18ID:LJT4:1:AO0 0
#dbpf 18ID:LJT4:1:AO1 0
#dbpf 18ID:LJT4:2:DO0 1
#dbpf 18ID:LJT4:2:DO1 1
#dbpf 18ID:LJT4:2:DO2 1
#dbpf 18ID:LJT4:2:DO3 1
#dbpf 18ID:LJT4:2:DO4 1
#dbpf 18ID:LJT4:2:DO5 1
#dbpf 18ID:LJT4:2:DO6 1
#dbpf 18ID:LJT4:2:DO7 1
#dbpf 18ID:LJT4:2:DO8 0
#dbpf 18ID:LJT4:2:DO9 0
#dbpf 18ID:LJT4:2:DO10 0
#dbpf 18ID:LJT4:2:DO11 0
#dbpf 18ID:LJT4:2:DO12 0
#dbpf 18ID:LJT4:2:DO13 0
#dbpf 18ID:LJT4:2:DO14 0
#dbpf 18ID:LJT4:2:DO15 0
#dbpf 18ID:LJT4:2:AO0 0
#dbpf 18ID:LJT4:2:AO1 0
#dbpf 18ID:LJT4:3:AO0 0
#dbpf 18ID:LJT4:3:AO1 0
# print the time our boot was finished
date
